<%
import math as mt
import numpy as np
%>-- Copyright (C) 2023-2025 NORCE
-- This deck was generated by expreccs https://github.com/cssr-tools/expreccs
----------------------------------------------------------------------------
RUNSPEC
----------------------------------------------------------------------------
DIMENS 
${dic['site_num_cells'][0]} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][2]} /

EQLDIMS
/

TABDIMS
${f"{dic['ntabs']} " if dic['ntabs'] > 1 else ""}/

CO2STORE
GAS
WATER
DISGASW

METRIC

START
1 JAN 2025 /
% if dic["hysteresis"]:

SATOPTS
HYSTER /
% endif

WELLDIMS
${len(dic['site_wellijk'])+8} ${dic['site_num_cells'][2]} ${2*len(dic['site_wellijk'])} ${len(dic['site_wellijk'])+8} /

UNIFIN
UNIFOUT
% if dic['site_bctype'][0] == 'flux':

AQUDIMS
-- MXNAQN MXNAQC NIFTBL NRIFTB NANAQU NNCAMAX
2* 5 100 ${len(dic['AQUFLUX_top'][0][0])+len(dic['AQUFLUX_bottom'][0][0])+len(dic['AQUFLUX_right'][0][0])+len(dic['AQUFLUX_left'][0][0])} 1000 /
% endif
----------------------------------------------------------------------------
GRID
----------------------------------------------------------------------------
INIT

INCLUDE
'${inc.upper()}_GRID.INC' /

EQUALS
% for i in range(dic[f'{reservoir}_num_cells'][2]):
PERMX ${dic['rock'][int(dic[f"{reservoir}_layers"][i])][0]} 4* ${i+1} ${i+1} /
PERMZ ${dic['rock'][int(dic[f"{reservoir}_layers"][i])][1]} 4* ${i+1} ${i+1} /
PORO  ${dic['rock'][int(dic[f"{reservoir}_layers"][i])][2]} 4* ${i+1} ${i+1} /
% endfor
/

COPY 
PERMX PERMY /
/
% if dic["fault_site"][2][0] != 1:

MULTX
% for k in range(dic['site_num_cells'][2]):
<%
n = 0
m = 0
%>\
% for j in range(dic['site_num_cells'][1]):
% for i in range(dic['site_num_cells'][0]):
% if i == dic["site_fault"][0][0] + n and j == dic["site_fault"][0][1] + n and i <= dic["site_fault"][1][0] and j <= dic["site_fault"][1][1]:
% if m > 0:
${m}* \
% endif
${dic["fault_site"][2][0]} \
<%
n += 1
m = 0
%>\
%else:
<%
m += 1
%>\
%endif
%endfor
%endfor
% if m > 0:
${m}* \
% endif
%endfor
/
% endif
% if dic["fault_site"][2][1] != 1:

MULTY
% for k in range(dic['site_num_cells'][2]):
<%
n = 0
m = 0
%>\
% for j in range(dic['site_num_cells'][1]):
% for i in range(dic['site_num_cells'][0]):
% if j == dic["site_fault"][0][1] + n - 1 and i == dic["site_fault"][0][0] + n and i <= dic["site_fault"][1][0] and j <= dic["site_fault"][1][1]:
% if m > 0:
${m}* \
% endif
${dic["fault_site"][2][1]} \
<%
n += 1
m = 0
%>\
%else:
<%
m += 1
%>\
% endif
% endfor
% endfor
% if m > 0:
${m}* \
% endif
% endfor
/
% endif
% if dic['site_bctype'][0] == 'pres' or dic['site_bctype'][0] == 'pres2p':

BCCON
% if dic["asleft"]:
% for k in range(dic['site_num_cells'][2]):
% for i in range(dic["site_num_cells"][1]):
${i+1+k*dic["site_num_cells"][1]} 1 1 ${i+1} ${i+1} ${k+1} ${k+1} I- /
% endfor
% endfor
% endif
% if dic["asright"]:
% for k in range(dic['site_num_cells'][2]):
% for i in range(dic["site_num_cells"][1]):
${i+1+k*dic["site_num_cells"][1]+dic['site_num_cells'][2]*dic["site_num_cells"][1]*dic["asleft"]} ${dic['site_num_cells'][0]} ${dic['site_num_cells'][0]} ${i+1} ${i+1} ${k+1} ${k+1} I /
% endfor
% endfor
% endif
% if dic["asbottom"]:
% for k in range(dic['site_num_cells'][2]):
% for i in range(dic["site_num_cells"][0]):
${i+1+k*dic["site_num_cells"][0]+dic['site_num_cells'][2]*dic["site_num_cells"][1]*dic["asleft"]+dic['site_num_cells'][2]*dic["site_num_cells"][1]*dic["asright"]} ${i+1} ${i+1} 1 1 ${k+1} ${k+1} J- /
% endfor
% endfor
% endif
% if dic["astop"]:
% for k in range(dic['site_num_cells'][2]):
% for i in range(dic["site_num_cells"][0]):
${i+1+k*dic["site_num_cells"][0]+dic['site_num_cells'][2]*dic["site_num_cells"][1]*dic["asleft"]+dic['site_num_cells'][2]*dic["site_num_cells"][1]*dic["asright"]+dic['site_num_cells'][2]*dic["site_num_cells"][0]*dic["asbottom"]} ${i+1} ${i+1} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} ${k+1} ${k+1} J /
% endfor
% endfor
% endif
/
% elif dic['site_bctype'][0] == 'open':

BCCON
1 1 ${dic['site_num_cells'][0]} 1 1 2* Y- /
2 1 ${dic['site_num_cells'][0]} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} 2* Y /
3 1 1 1 ${dic['site_num_cells'][1]} 2* X- /
4 ${dic['site_num_cells'][0]} ${dic['site_num_cells'][0]} 1 ${dic['site_num_cells'][1]} 2* X /
/
% elif dic['site_bctype'][0] == 'porv':
----------------------------------------------------------------------------
EDIT
----------------------------------------------------------------------------
OPERATE
PORV 1 ${dic['site_num_cells'][0]} 1 1 2* ADDX PORV ${dic["site_porv"][0]/(dic['site_num_cells'][0]*sum(dic["siteka"]))} /
PORV ${dic['site_num_cells'][0]} ${dic['site_num_cells'][0]} 1 ${dic['site_num_cells'][1]} 2* ADDX PORV ${dic["site_porv"][1]/(dic['site_num_cells'][1]*sum(dic["siteka"]))} /
PORV 1 ${dic['site_num_cells'][0]} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} 2* ADDX PORV ${dic["site_porv"][2]/(dic['site_num_cells'][0]*sum(dic["siteka"]))} /
PORV 1 1 1 ${dic['site_num_cells'][1]} 2* ADDX PORV ${dic["site_porv"][3]/(dic['site_num_cells'][1]*sum(dic["siteka"]))} /
/ 
% elif dic['site_bctype'][0] == 'porvproj':
----------------------------------------------------------------------------
EDIT
----------------------------------------------------------------------------
OPERATE
% if sum(dic["siteka"]) == dic["site_num_cells"][2]:
PORV 1 ${dic['site_num_cells'][0]} 1 1 2* ADDX PORV ${dic["pv_bottom"]/(dic['site_num_cells'][0]*dic['site_num_cells'][2])} /
PORV ${dic['site_num_cells'][0]} ${dic['site_num_cells'][0]} 1 ${dic['site_num_cells'][1]} 2* ADDX PORV ${dic["pv_right"]/(dic['site_num_cells'][1]*dic['site_num_cells'][2])} /
PORV 1 ${dic['site_num_cells'][0]} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} 2* ADDX PORV ${dic["pv_top"]/(dic['site_num_cells'][0]*dic['site_num_cells'][2])} /
PORV 1 1 1 ${dic['site_num_cells'][1]} 2* ADDX PORV ${dic["pv_left"]/(dic['site_num_cells'][1]*dic['site_num_cells'][2])} /
% else:
% for k in range(dic["site_num_cells"][2]):
% if dic["siteka"][k]:
PORV 1 ${dic['site_num_cells'][0]} 1 1 ${k+1} ${k+1} ADDX PORV ${dic["pv_bottom"]/(dic['site_num_cells'][0]*sum(dic["siteka"]))} /
PORV ${dic['site_num_cells'][0]} ${dic['site_num_cells'][0]} 1 ${dic['site_num_cells'][1]} ${k+1} ${k+1} ADDX PORV ${dic["pv_right"]/(dic['site_num_cells'][1]*sum(dic["siteka"]))} /
PORV 1 ${dic['site_num_cells'][0]} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} ${k+1} ${k+1} ADDX PORV ${dic["pv_top"]/(dic['site_num_cells'][0]*sum(dic["siteka"]))} /
PORV 1 1 1 ${dic['site_num_cells'][1]} ${k+1} ${k+1} ADDX PORV ${dic["pv_left"]/(dic['site_num_cells'][1]*sum(dic["siteka"]))} /
% endif
% endfor
% endif
/ 
% endif
----------------------------------------------------------------------------
PROPS
----------------------------------------------------------------------------
INCLUDE
'${inc.upper()}_SGWFN.INC' /
% if dic["hysteresis"]:

EHYSTR
1* ${"2" if dic["hysteresis"][0].upper()=="KILLOUGH" else "0"} 2* ${dic["hysteresis"][1].upper()} /
% endif
% if dic["salinity"] > 0:

SALINITY
${dic["salinity"]} /
% endif
%if dic["rock_comp"] > 0:

ROCK
276 ${dic["rock_comp"]} /
% endif
% if len(dic['safu']) > 1:
----------------------------------------------------------------------------
REGIONS
----------------------------------------------------------------------------
EQUALS
% for i in range(dic[f'{reservoir}_num_cells'][2]):
SATNUM ${dic[f'{reservoir}_layers'][i]+1} 4* ${i+1} ${i+1} /
% endfor
% if dic["hysteresis"]:
% for i in range(dic[f'{reservoir}_num_cells'][2]):
IMBNUM ${dic[f'{reservoir}_layers'][i]+1+int(len(dic['safu'])/2)} 4* ${i+1} ${i+1} /
% endfor
% endif
/
% endif
----------------------------------------------------------------------------
SOLUTION
----------------------------------------------------------------------------
EQUIL
0 ${dic['pressure']} 0 0 0 0 1 1 0 /

RTEMPVD
0 ${dic['temperature'][0]}
${dic[f'{reservoir}_zmz'][-1]} ${dic['temperature'][1]} /

RPTRST 
BASIC=2 DEN PCGW FLOWS${" FLOWS-" if dic["iterations"] > 0 else ""} /
% if dic['site_bctype'][0] == 'flux':

AQUANCON
-- Aq# I1 I2 J1 J2 K1 K2 FACE
% for k in range(dic['regional_num_cells'][2]):
% for i in range(dic["left_num_cells"]):
${i+1+k*dic["left_num_cells"]} 1 1 ${1+i*mt.floor(dic['site_num_cells'][1]/dic["left_num_cells"])} ${(i+1)*mt.floor(dic['site_num_cells'][1]/dic["left_num_cells"])} ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1}	'I-' 1.00 1 /
% endfor
% endfor
% for k in range(dic['regional_num_cells'][2]):
% for i in range(dic["right_num_cells"]):
${i+1+k*dic["right_num_cells"]+len(dic['AQUFLUX_left'][0][0])} ${dic['site_num_cells'][0]} ${dic['site_num_cells'][0]} ${1+i*mt.floor(dic['site_num_cells'][1]/dic["right_num_cells"])} ${(i+1)*mt.floor(dic['site_num_cells'][1]/dic["right_num_cells"])} ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1} 'I' 1.00 1 /
% endfor
% endfor
% for k in range(dic['regional_num_cells'][2]):
% for i in range(dic["bottom_num_cells"]):
% if ((i+1)*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"]) != 1 and 1+i*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"])!=dic['site_num_cells'][0]) and dic["bottom_num_cells"]>2:
% if i==0:
${i+1+k*dic["bottom_num_cells"]+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])} ${2} ${(i+1)*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"])} 1 1 ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1} 'J-' 1.00 1 /
% elif i==dic["bottom_num_cells"]-1:
${i+1+k*dic["bottom_num_cells"]+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])} ${1+i*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"])} ${dic['site_num_cells'][0]-1} 1 1 ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1} 'J-' 1.00 1 /
% else:
${i+1+k*dic["bottom_num_cells"]+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])} ${1+i*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"])} ${(i+1)*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"])} 1 1 ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1} 'J-' 1.00 1 /
% endif
% endif
% endfor
% endfor
% for k in range(dic['regional_num_cells'][2]):
% for i in range(dic["top_num_cells"]):
% if ((i+1)*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"]) != 1 and 1+i*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"])!=dic['site_num_cells'][0]) and dic["top_num_cells"]>2:
% if i==0:
${i+1+k*dic["top_num_cells"]+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])+len(dic['AQUFLUX_bottom'][0][0])} ${2} ${(i+1)*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"])} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1} 'J' 1.00 1 /
% elif i==dic["top_num_cells"]-1:
${i+1+k*dic["top_num_cells"]+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])+len(dic['AQUFLUX_bottom'][0][0])} ${1+i*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"])} ${dic['site_num_cells'][0]-1} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1}	'J' 1.00 1 /
% else:
${i+1+k*dic["top_num_cells"]+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])+len(dic['AQUFLUX_bottom'][0][0])} ${1+i*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"])} ${(i+1)*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"])} ${dic['site_num_cells'][1]} ${dic['site_num_cells'][1]} ${np.where(dic["site_zmaps"]==k)[0][0]+1} ${np.where(dic["site_zmaps"]==k)[0][-1]+1} 'J' 1.00 1 /
% endif
% endif
% endfor
% endfor
/
% endif
----------------------------------------------------------------------------
SUMMARY
----------------------------------------------------------------------------
FPR
FGIP
FWIP
FGIR
FGIT
FGIP
FGIPL
FGIPG
WGIR
/
WWIR
/
WGIT
/
WBHP
/
RPR
/
RGIP
/
RGIPL
/
RGIPG
/
BPR
${dic["site_sensor"][0]+1} ${dic["site_sensor"][1]+1} ${dic["site_sensor"][2]+1} /
/
BGIP
${dic["site_sensor"][0]+1} ${dic["site_sensor"][1]+1} ${dic["site_sensor"][2]+1} /
/
BGIPG
${dic["site_sensor"][0]+1} ${dic["site_sensor"][1]+1} ${dic["site_sensor"][2]+1} /
/
BGIPL
${dic["site_sensor"][0]+1} ${dic["site_sensor"][1]+1} ${dic["site_sensor"][2]+1} /
/
BFLOWI
${dic["site_sensor"][0]+1} ${dic["site_sensor"][1]+1} ${dic["site_sensor"][2]+1} /
/
BFLOWJ
${dic["site_sensor"][0]+1} ${dic["site_sensor"][1]+1} ${dic["site_sensor"][2]+1} /
/
----------------------------------------------------------------------------
SCHEDULE
----------------------------------------------------------------------------
RPTRST
BASIC=2 DEN PCGW FLOWS${" FLOWS-" if dic["iterations"] > 0 else ""} /

WELSPECS
% for i in range(len(dic['site_wellijk'])):
INJS${i} G1 ${dic['site_wellijk'][i][0]} ${dic['site_wellijk'][i][1]} 1* GAS /
% endfor
% if dic['site_bctype'][0] == 'wells':
BCINJ0 W ${mt.ceil(dic['site_num_cells'][0]/2)} 1 1* WAT /
BCINJ1 W ${dic['site_num_cells'][0]} ${mt.ceil(dic['site_num_cells'][1]/2)} 1* WAT /
BCINJ2 W ${mt.ceil(dic['site_num_cells'][0]/2)} ${dic['site_num_cells'][1]} 1* WAT /
BCINJ3 W 1 ${mt.ceil(dic['site_num_cells'][1]/2)} 1* WAT /
BCPRO0 W ${mt.ceil(dic['site_num_cells'][0]/2)} 1 1* WAT /
BCPRO1 W ${dic['site_num_cells'][0]} ${mt.ceil(dic['site_num_cells'][1]/2)} 1* WAT /
BCPRO2 W ${mt.ceil(dic['site_num_cells'][0]/2)} ${dic['site_num_cells'][1]} 1* WAT /
BCPRO3 W 1 ${mt.ceil(dic['site_num_cells'][1]/2)} 1* WAT /
% endif
/
COMPDAT
% for i in range(len(dic['site_wellijk'])):
'INJS${i}' ${dic['site_wellijk'][i][0]} ${dic['site_wellijk'][i][1]} ${dic['site_wellijk'][i][2]} ${dic['site_wellijk'][i][3]} OPEN 2* 0.2 /
% endfor
% if dic['site_bctype'][0] == 'wells':
BCINJ0 ${mt.ceil(dic['site_num_cells'][0]/2)} 1 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
BCINJ1 ${dic['site_num_cells'][0]} ${mt.ceil(dic['site_num_cells'][1]/2)} 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
BCINJ2 ${mt.ceil(dic['site_num_cells'][0]/2)} ${dic['site_num_cells'][1]} 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
BCINJ3 1 ${mt.ceil(dic['site_num_cells'][1]/2)} 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
BCPRO0 ${mt.ceil(dic['site_num_cells'][0]/2)} 1 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
BCPRO1 ${dic['site_num_cells'][0]} ${mt.ceil(dic['site_num_cells'][1]/2)} 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
BCPRO2 ${mt.ceil(dic['site_num_cells'][0]/2)} ${dic['site_num_cells'][1]} 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
BCPRO3 1 ${mt.ceil(dic['site_num_cells'][1]/2)} 1 ${dic['site_num_cells'][2]} OPEN 2* 0.2 /
% endif
/
<% n = 0 %>\
% for j in range(len(dic['inj'])):
% for k in range(round(dic['inj'][j][0][0]/dic['inj'][j][0][2])):

% if dic["tuning"]:
<% i = 1 if dic["site_bctype"] == "wells" else 0 %>\
TUNING
${dic['inj'][j][2+i]+" " if len(dic['inj'][j])>2+i else ""}/
${dic['inj'][j][3+i]+" " if len(dic['inj'][j])>3+i else ""}/
${dic['inj'][j][4+i]+" " if len(dic['inj'][j])>4+i else ""}/
% endif
WCONINJE
% for i in range(len(dic['site_wellijk'])):
% if dic['inj'][j][1][2*i] > 0:
INJS${i} GAS ${'OPEN' if dic['inj'][j][1][2*i+1] > 0 else 'SHUT'} RATE ${f"{dic['inj'][j][1][2*i+1] / 1.86843:E}"} 1* 480 /
% else:
INJS${i} WAT ${'OPEN' if dic['inj'][j][1][2*i+1] > 0 else 'SHUT'} RATE ${f"{dic['inj'][j][1][2*i+1] / 998.108:E}"} 1* 480 /
/
% endif
% endfor
% if dic['site_bctype'][0] == "wells":
BCINJ0 WAT ${'OPEN' if dic['inj'][j][2][0] > 0 else 'SHUT'} BHP 2* ${dic['inj'][j][2][1]} /
BCINJ1 WAT ${'OPEN' if dic['inj'][j][2][2] > 0 else 'SHUT'} BHP 2* ${dic['inj'][j][2][3]} /
BCINJ2 WAT ${'OPEN' if dic['inj'][j][2][4] > 0 else 'SHUT'} BHP 2* ${dic['inj'][j][2][5]} /
BCINJ3 WAT ${'OPEN' if dic['inj'][j][2][6] > 0 else 'SHUT'} BHP 2* ${dic['inj'][j][2][7]} /
% endif
/
%if dic['site_bctype'][0] == 'flux':
AQUFLUX
% for i in range(len(dic['AQUFLUX_left'][0][0])):
${i+1} ${dic['AQUFLUX_left'][n+k+1][0][i]} /
% endfor
% for i in range(len(dic['AQUFLUX_right'][0][0])):
${i+1+len(dic['AQUFLUX_left'][0][0])} ${dic['AQUFLUX_right'][n+k+1][0][i]} / 
% endfor
% for i in range(len(dic['AQUFLUX_bottom'][0][0])):
% if ((i%dic["bottom_num_cells"]+1)*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"]) != 1 and 1+(i%dic["bottom_num_cells"])*mt.floor(dic['site_num_cells'][0]/dic["bottom_num_cells"])!=dic['site_num_cells'][0]) and dic["bottom_num_cells"]>2:
${i+1+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])} ${dic['AQUFLUX_bottom'][n+k+1][0][i]} /
% endif
% endfor
% for i in range(len(dic['AQUFLUX_top'][0][0])):
% if ((i%dic["top_num_cells"]+1)*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"]) != 1 and 1+(i%dic["top_num_cells"])*mt.floor(dic['site_num_cells'][0]/dic["top_num_cells"])!=dic['site_num_cells'][0]) and dic["top_num_cells"]>2:
${i+1+len(dic['AQUFLUX_left'][0][0])+len(dic['AQUFLUX_right'][0][0])+len(dic['AQUFLUX_bottom'][0][0])} ${dic['AQUFLUX_top'][n+k+1][0][i]} /
% endif
% endfor
/
% elif dic['site_bctype'][0]== 'pres' or dic['site_bctype'][0] == 'pres2p':
BCPROP
% if dic["asleft"]:
% for i in range(len(dic['PRESSURE_left'][0][0])):
% if dic['PRESSURE_left'][n+k+1][0][i] > 0:
${i+1} DIRICHLET WATER 1* ${dic['PRESSURE_left'][n+k+1][0][i]} /
% endif
% endfor
% endif
% if dic["asright"]:
% for i in range(len(dic['PRESSURE_right'][0][0])):
% if dic['PRESSURE_right'][n+k+1][0][i] > 0:
${i+1+len(dic['PRESSURE_left'][0][0])} DIRICHLET WATER 1* ${dic['PRESSURE_right'][n+k+1][0][i]} /
% endif
% endfor
% endif
% if dic["asbottom"]:
% for i in range(len(dic['PRESSURE_bottom'][0][0])):
% if dic['PRESSURE_bottom'][n+k+1][0][i] > 0:
${i+1+len(dic['PRESSURE_left'][0][0])+len(dic['PRESSURE_right'][0][0])} DIRICHLET WATER 1* ${dic['PRESSURE_bottom'][n+k+1][0][i]} /
% endif
% endfor
% endif
% if dic["astop"]:
% for i in range(len(dic['PRESSURE_top'][0][0])):
% if dic['PRESSURE_top'][n+k+1][0][i] > 0:
${i+1+len(dic['PRESSURE_left'][0][0])+len(dic['PRESSURE_right'][0][0])+len(dic['PRESSURE_bottom'][0][0])} DIRICHLET WATER 1* ${dic['PRESSURE_top'][n+k+1][0][i]} /
% endif
% endfor
% endif
/
%elif dic['site_bctype'][0] == "open":
BCPROP 
1 FREE /
2 FREE /
3 FREE /
4 FREE /
/
% elif dic['site_bctype'][0] == "wells":
WCONPROD
BCPRO0 ${'OPEN' if dic['inj'][j][2][0] == 0 else 'SHUT'} BHP 5* ${dic['inj'][j][2][1]} /
BCPRO1 ${'OPEN' if dic['inj'][j][2][2] == 0 else 'SHUT'} BHP 5* ${dic['inj'][j][2][3]} /
BCPRO2 ${'OPEN' if dic['inj'][j][2][4] == 0 else 'SHUT'} BHP 5* ${dic['inj'][j][2][5]} /
BCPRO3 ${'OPEN' if dic['inj'][j][2][6] == 0 else 'SHUT'} BHP 5* ${dic['inj'][j][2][7]} /
/
% endif
TSTEP
${dic['inj'][j][0][2]} /
% endfor
<%
n += round(dic['inj'][j][0][0]/dic['inj'][j][0][2])
%>\
% endfor